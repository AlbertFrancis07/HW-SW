
table inpr 16 8 {1000,707,0,-707,-1000,-707,0,707}

operation BIT_REVERSE {out AR mr, in AR s, in AR m}{}
{
 assign mr = {
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10],m[11]),
        TIEmux(s[3:0], 1'b0, 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10],m[11],m[12]),
        TIEmux(s[3:0], 1'b0, 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10],m[11],m[12],m[13]),
        TIEmux(s[3:0], 1'b0, m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10],m[11],m[12],m[13],m[14])
    };			
}

/*
 *
 *MAC
 *
*/


operation FFT_MAC {out AR tr,out AR ti, in AR a, in AR b, in AR c, in AR d}{}
{
	wire [31:0] ra=TIEmul(a[15:0],b[15:0],1'b1)>>15;
	wire [31:0] rb=TIEmul(c[15:0],d[15:0],1'b1)>>15;
	wire [31:0] rc=TIEmul(a[15:0],d[15:0],1'b1)>>15;
	wire [31:0] rd=TIEmul(c[15:0],b[15:0],1'b1)>>15;
	assign tr=ra-rb;
	assign ti=rc+rd;

};


/*
 *
 *SIMD
 *
*/

regfile FFT_reg 128 8 vr


operation FFT_SIMD_frn{out AR frn,out AR frp, in FFT_reg qr, in FFT_reg tr}{}
{
	wire [31:0] frn0 =qr[127:112]-tr[127:112];
	wire [31:0] frn1 = qr[111:96]-tr[111:96];
	wire [31:0] frn2 = qr[95:80]-tr[95:80];
	wire [31:0] frn3 = qr[79:64]-tr[79:64];
	wire [31:0] frn4 = qr[63:48]+tr[63:48];
	wire [31:0] frn5 = qr[47:32]+tr[47:32];
	wire [31:0] frn6 = qr[31:16]+tr[31:16];
	wire [31:0] frn7 = qr[15:0]+tr[15:0];
	assign frn ={fr0,fr1,fr2,fr3};
	assign frp ={fr4,fr5,fr6,fr7};
	
}

operation FFT_SIMD_fi{out AR fin,out AR fip, in FFT_reg qr, in FFT_reg tr}{}
{
	wire [31:0] fin0 =qi[127:112]-ti[127:112];
	wire [31:0] fin1 = qi[111:96]-ti[111:96];
	wire [31:0] fin2 = qi[95:80]-ti[95:80];
	wire [31:0] fin3 = qi[79:64]-ti[79:64];
	wire [31:0] fin4 = qi[63:48]+ti[63:48];
	wire [31:0] fin5 = qi[47:32]+ti[47:32];
	wire [31:0] fin6 = qi[31:16]+ti[31:16];
	wire [31:0] fin7 = qi[15:0]+ti[15:0];
	assign fin ={fi0,fi1,fi2,fi3};
	assign fip ={fi4,fi5,fi6,fi7};
	
}



