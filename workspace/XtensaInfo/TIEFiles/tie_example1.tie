operation ADD3 {inout AR res, in AR in0, in AR in1} {} {
   assign res = res + in0 + in1;
}

operation ADD3_DIV2 {inout AR res, in AR in0, in AR in1} {} {
	wire [31:0] tmp = res + in0 + in1; 
   assign res=tmp>>1; 
}

format ADD3_DIV2_FLIX 64 {SLOT0, SLOT1}
slot_opcodes SLOT0 {L32I.N, S32I.N}
slot_opcodes SLOT1 {ADD3_DIV2}

regfile VR 80 8 VR

operation ADD3_DIV2_SIMD {inout VR res, in VR in0, in VR in1} {} {
	wire [7:0] tmp0 = res[7:0] + in0[7:0] + in1[7:0]; 
	wire [7:0] tmp1 = res[15:8] + in0[15:8] + in1[15:8]; 
	wire [7:0] tmp2 = res[23:16] + in0[23:16] + in1[23:16]; 
	wire [7:0] tmp3 = res[31:24] + in0[31:24] + in1[31:24]; 
	wire [7:0] tmp4 = res[39:32] + in0[39:32] + in1[39:32]; 
	wire [7:0] tmp5 = res[47:40] + in0[47:40] + in1[47:40]; 
	wire [7:0] tmp6 = res[55:48] + in0[55:48] + in1[55:48]; 
	wire [7:0] tmp7 = res[63:56] + in0[63:56] + in1[63:56]; 
	wire [7:0] tmp8 = res[71:64] + in0[71:64] + in1[71:64]; 
	wire [7:0] tmp9 = res[79:72] + in0[79:72] + in1[79:72]; 
   assign res={tmp9>>1, tmp8>>1, tmp7>>1, tmp6>>1, tmp5>>1,
               tmp4>>1, tmp3>>1, tmp2>>1, tmp1>>1, tmp0>>1}; 
}